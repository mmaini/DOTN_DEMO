@*kako bi se promjena dogodila na click unutar diva koristimo onclick - metodi proslijeđujemo parametar name uz args*@
<div class="bg-light border m-1 col-5" @onclick="(args)=>LastSelectedProductUpdated(args,Product.Name)">
                <h4 class="text-secondary">Product - @Product.Id</h4>

                <input type="checkbox" @onchange="FavoriteUpdated"/> Add to favorite <br/>

                Name - @Product.Name <br/>
                Show properties: <input type="checkbox" @bind-value="Product.IsActive" checked="@(Product.IsActive? "checked":null)">

                @if(Product.IsActive)
                {
                    @foreach(var prodProp in Product.ProductProperties)
                    {
                        <p>@prodProp.Key - @prodProp.Value </p>
                    }
                }

                <br/>
               <_EditDeleteButton IsActive="@Product.IsActive"/>
</div>
@code {
    [Parameter]
    public DemoProduct Product { get; set; }

    //za prijavu metode koja se treba pozvati kada se desi neki događaj
    [Parameter]
    public EventCallback<bool> OnFavoriteSelection { get; set; }

    [Parameter]
    public EventCallback<string> OnLastSelectedProductChange { get; set; }


    //kada se dogodi događaj pozivaju se metode koje su se prijavile
    private async Task FavoriteUpdated(ChangeEventArgs e)
    {
        await OnFavoriteSelection.InvokeAsync((bool)e.Value);
    }

    private async Task LastSelectedProductUpdated(MouseEventArgs e, string name)
    {
        await OnLastSelectedProductChange.InvokeAsync(name);
    }
}

@*Možemo dati različite putanje*@
@*Možemo definirati i parametre koje proslijeđujemo kroz URL*@
@page "/learnBlazor/learnRouting/{parameter1}"
@page "/learnBlazor/learnRouting/{parameter1}/{parameter2}"
@page "/learnBlazor/learnRouting"
@page "/learnRouting"

@*Dependency Injection*@
@inject NavigationManager _NavigationManager

<h3>LearnRouting</h3>

<h4>Parameter 1: @Parameter1</h4>
<h4>Parameter 2: @Parameter2</h4>

@*Samo generiramo URL s parametrima*@
<a href="learnRouting?Param1=DOTN&Param2=VSITE" class="btn btn-primary">Navigate to query params</a>
@*Dohvaćamo parametre i prikazujemo ih*@
<button class="btn btn-success" @onclick="LoadParameters">Load  params</button>
<br/>

<h3>Query string params: </h3>
<h4>Param1: @Param1</h4>
<h4>Param2: @Param2</h4>
@code {
    [Parameter]
    //mora biti istog imena kao parameter u URL radi mapiranja
    public string Parameter1 { get; set; }

    [Parameter]
    public string Parameter2 { get; set; }

    [Parameter]
    public string Param1 { get; set; }

    [Parameter]
    public string Param2 { get; set; }

    private void LoadParameters()
    {
        //koristimo ugrađeni NavigationManager i njegove metode za dohvati parametara iz queryja
        var absoluteURI = new Uri(_NavigationManager.Uri);
        //dobijemo dictionary
        var queryParam = System.Web.HttpUtility.ParseQueryString(absoluteURI.Query);
        Param1 = queryParam["Param1"];
        Param2 = queryParam["Param2"];

    }

}

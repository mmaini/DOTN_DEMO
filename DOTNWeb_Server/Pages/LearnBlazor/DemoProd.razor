@page "/learnBlazor/demoprod"

<h2 class="text-primary">Demo product</h2>
<p>Favourites total: @SelectedFavoriteCount</p>
<p>Last selected product: @LastSelectedProductName</p>

<div class="border p-2 mt-2" style="background-color:azure">
    <div class="row">
        @foreach(var prod in products)
        {
            <_IndividualProduct Product="prod" OnFavoriteSelection="FavouriteCountUpdate"
                OnLastSelectedProductChange="SelectedProductUpdate"/>
        }

    </div>
</div>


@code {
    List<DemoProduct> products = new List<DemoProduct>();
    private int SelectedFavoriteCount { get; set; } = 0;
    private string LastSelectedProductName { get; set; }

    protected override void OnInitialized()
    {
        products.Add(new()
            {
                Id = 1,
                Name = "Midnight Blaze",
                IsActive = false,
                Price = 10.99,
                ProductProperties = new()
                {
                    new DemoProductProp { Id = 1, Key = "Flavor", Value = "Rose"},
                    new DemoProductProp { Id = 2, Key = "Size", Value = "20oz"},
                    new DemoProductProp { Id = 3, Key = "Color", Value="Purple" }
                }
            });

        products.Add(new()
        {
            Id = 2,
            Name = "Blossom Lily",
            IsActive = true,
            Price = 10.99,
            ProductProperties = new()
            {
                new DemoProductProp { Id = 1, Key = "Flavor", Value = "Lily" },
                new DemoProductProp { Id = 2, Key = "Size", Value = "18oz" },
                new DemoProductProp {Id = 3,Key = "Color",Value = "White"}
            }
        });
    }

    protected void FavouriteCountUpdate(bool isSelected)
    {
        if (isSelected) SelectedFavoriteCount++;
        else SelectedFavoriteCount--;
    }

    protected void SelectedProductUpdate(string name)
    {
        LastSelectedProductName = name;
    }
}
